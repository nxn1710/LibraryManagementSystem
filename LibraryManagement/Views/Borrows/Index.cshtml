

@model PagedList.IPagedList<LibraryManagement.Models.Borrowed>
@using PagedList.Mvc;
<div class="row">
    @if (TempData["message"] != null)
    {
        var className = "alert text-center " + (@TempData["error"] != null ? "alert-danger" : "alert-success");
        <p class="@className">
            @TempData["message"]
        </p>
    }
    <div class="col-sm-12 mb-1">
        <form action="/Borrows/Index" method="GET">
            <div class="col-sm-5 pl-0">
                @Html.TextBox("key", null, new { @class = "form-control input-sm" })
                @Html.Hidden("sortProperty", (object)ViewBag.sortProperty)
                @Html.Hidden("sortOrder", (object)ViewBag.sortOrder)
            </div>
            <div class="col-sm-7">
                <button class="btn btn-primary" type="submit"><i class="fa fa-search" aria-hidden="true"></i> Search</button>
                @Html.ActionLink("Clear", "Index", "Borrows", null, new { @class = "btn btn-default" })
                <a href="@Url.Action("Add", "Borrows")" class="btn btn-success">
                    <i class="fa fa-plus"></i>
                    Add New
                </a>
                <a href="@Url.Action("Export", "Borrows")" class="btn btn-info"><i class="fa fa-download" aria-hidden="true"></i> Export to excel</a>
            </div>
        </form>
    </div>
    <div class="col-lg-12">
        <!-- Modal -->
        <div id="myModal" class="modal fade" role="document" style="z-index: 10000000000000">
            <div class="modal-dialog modal-lg">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Modal Header</h4>
                    </div>
                    <div class="modal-body">
                        <table class="table table-striped table-bordered table-hover"
                               id="dataTables-example">
                            <thead>
                                <tr>
                                    <th>Book ID</th>
                                    <th>Title</th>
                                    <th>Thumbnail</th>
                                    <th>Price</th>
                                </tr>
                            </thead>
                            <tbody id="detail-borrow">
                            </tbody>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>

            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                All Borrows in library
            </div>
            <div class="panel-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover"
                           id="dataTables-example">
                        <thead>
                            <tr>
                                @Html.Raw(ViewBag.Headings)
                                <th>Confirm</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var borrow in Model)
                            {
                                <tr>

                                    <td>@borrow.ID</td>
                                    <td> @borrow.MemberID</td>
                                    <td> @borrow.StaffID</td>
                                    <td> @borrow.TotalPrice</td>
                                    <td> @borrow.BorrowedTime.ToString("dd MMM yyyy")</td>
                                    <td> @borrow.ReturnDeadline.ToString("dd MMM yyyy")</td>
                                    <td >
                                        @if (borrow.ReturnTime != null)
                                        {
                                            @borrow.ReturnTime
                                        }
                                    </td>
                                    <td> @borrow.Return</td>

                                    <td>
                                        @if (borrow.Return != true)
                                        {
                                            <btn onclick="confirmFunction(@borrow.ID)" class="btn btn-danger" id="delete-btnConfirm"><i class="fa fa-trash"></i></btn>

                                        }
                                        <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#myModal" onclick="viewDetailBorrows(@borrow.ID)" id="show-detail">View Detail</button>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-6">
        <form action="/Authors/Index" method="GET">
            <p class="m-20" style="width: 75px">
                @Html.DropDownList("size", (List<SelectListItem>)ViewBag.size, new { @class = "form-control", @onchange = "this.form.submit();" })
                @Html.Hidden("sortProperty", (object)ViewBag.sortProperty)
                @Html.Hidden("sortOrder", (object)ViewBag.sortOrder)
                @Html.Hidden("key", (object)ViewBag.searchValue)
            </p>
        </form>
    </div>
    <div class="col-lg-6" style="z-index: 0">
        @Html.PagedListPager(Model, page => Url.Action("Index",
         new
              {
             page,
             size = ViewBag.currentSize,
             sortProperty = ViewBag.sortProperty,
             sortOrder = ViewBag.sortProperty,
             key = ViewBag.searchValue
         }))
    </div>

</div>

<script>
    function confirmFunction(id) {
        var { origin } = window.location;
        swal({
            title: "Do you want to confirm?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    window.location = `${origin}/Borrows/Confirm/${id}`;
                }
            });
    }
</script>

<script>
    function viewDetailBorrows(id) {
        $.ajax({
            url: "https://localhost:44325/Borrows/viewDetail?bID=" + id,
            dataType: "json",
        }).done(function (data) {
            if (data.length > 0) {
                var borrow = data.map(function (value) {
                    return `<tr>
                                   <td>${value.ID}</td>
                                   <td>${value.Title}</td>
                                   <td><img src="${value.Thumbnail}" style="width:150px;height:150px"></td>
                                   <td>${value.Price}</td>
                            </tr>`;

                })
                console.log(borrow);
                $('#detail-borrow').html(borrow.join(""));
            } else {
                var waring = 'No books are borrowed';
                $('#detail-borrow').html(`<td colspan="4">${waring}</td >`).css({ 'text-align': 'center', 'color': 'red', 'font-size': '50px'});
            }
            
        });
    }
</script>
