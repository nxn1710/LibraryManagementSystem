@model LibraryManagement.Models.Book
<div class="row">
    <div class="col-lg-6">
        <div class="panel panel-info">
            <div class="panel-heading">
                Update Book ID @Model.ID
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-12">
                        @using (Html.BeginForm("Edit", "Book", FormMethod.Post, new
                        { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-group">
                                @Html.HiddenFor(b => b.ID)
                                @Html.LabelFor(b => b.AuthorID, "Author")
                                @Html.DropDownListFor(b => b.AuthorID, (IEnumerable<SelectListItem>)ViewBag.Authors, new { @class = "form-control" })
                                @Html.ValidationMessageFor(b => b.AuthorID, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(b => b.CategoryID, "Category")
                                @Html.DropDownListFor(b => b.CategoryID, (IEnumerable<SelectListItem>)ViewBag.Categories, new { @class = "form-control" })
                                @Html.ValidationMessageFor(b => b.CategoryID, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(b => b.Title, "Title")
                                @Html.TextBoxFor(b => b.Title, null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(b => b.Title, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(b => b.Price, "Price")
                                @Html.TextBoxFor(b => b.Price, null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(b => b.Price, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(b => b.AvailableBook, "Available Book")
                                @Html.TextBoxFor(b => b.AvailableBook, null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(b => b.AvailableBook, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(b => b.Description, "Description")
                                @Html.TextAreaFor(b => b.Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(b => b.Description, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(b => b.Thumbnail, "Thumbnail")
                                @*@Html.TextBoxFor(b => b.thumbnail, new { @type = "text",style="display:none",@class = "form-control" })*@
                                <p id="p-image-contain"><img id="image-contain" src="@Model.Thumbnail" style="width: 150px; height: 150px;" alt="Image"></p>
                                <input type="file" id="image" name="ImageFile" value="">
                                @Html.ValidationMessageFor(b => b.Thumbnail, null, new { @class = "text-danger" })
                            </div>
                            <button type="submit" class="btn btn-info">Update</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    $("#image").change(function () {
        showImage(this);
    });

    function showImage(fileInput) {
        file = fileInput.files[0];
        reader = new FileReader();
        reader.onload = function (e) {
            $("#image-contain").attr('src', e.target.result);
        };
        reader.readAsDataURL(file);
    }
</script>